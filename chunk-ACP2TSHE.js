import{a as l,b as w}from"./chunk-CUGN3AIA.js";import{$ as u,Sc as s,Tc as f,W as m,l as n,o,z as a}from"./chunk-HKUWCROW.js";import{a as g,b}from"./chunk-JKOY2XUY.js";var A=class c{http=u(f);auth=u(w);baseUrl=l.apiBaseUrl;getNotifications(){let e=this.auth.getToken();if(!e)return n(()=>new Error("Patient session expired"));let r=new s({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/notifications/`,{headers:r}).pipe(o(t=>t.notifications),a(t=>n(()=>t)))}getAppointments(e){let r=this.auth.getToken();if(!r)return n(()=>new Error("Doctor session expired."));let t=new s({Authorization:`Bearer ${r}`});return this.http.get(`${this.baseUrl}/appointments`,{headers:t}).pipe(a(i=>n(()=>i)))}getMyReviews(){let e=this.auth.getToken();if(!e)return n(()=>new Error("Patient session expired."));let r=new s({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/myReviews`,{headers:r}).pipe(o(t=>t.reviews),a(t=>n(()=>t)))}getRecords(){let e=this.auth.getToken();if(!e)return n(()=>new Error("Patient session expired"));let r=new s({Authorization:`Bearer ${e}`}),t=l.socketUrl;return this.http.get(`${this.baseUrl}/patient/records`,{headers:r}).pipe(o(i=>i.records.map(p=>b(g({},p),{fileUrl:`${t}${p.fileUrl}`}))),a(i=>n(()=>i)))}uploadMedicalRecord(e,r,t){let i=this.auth.getToken();if(!i)return n(()=>new Error("Patient session expired."));let p=new s({Authorization:`Bearer ${i}`}),h=new FormData;return h.append("file",e),h.append("type",r.toUpperCase()),t&&h.append("notes",t),this.http.post(`${this.baseUrl}/patient/records`,h,{headers:p}).pipe(o(d=>d.record),a(d=>n(()=>d)))}getDoctors(){let e=this.auth.getToken();if(!e)return n(()=>new Error("Patient session expired."));let r=new s({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/patient/getDoctors`,{headers:r}).pipe(o(t=>t.doctors),a(t=>n(()=>t)))}getAuthHeaders(){let e=this.auth.getToken();return new s({Authorization:`Bearer ${e}`})}getDoctorById(e){return this.http.get(`${this.baseUrl}/patient/doctor/${e}`,{headers:this.getAuthHeaders()})}getMyDoctors(){return this.http.get(`${this.baseUrl}/patient/getMyDoctors`,{headers:this.getAuthHeaders()}).pipe(o(e=>e.doctors))}reserveSlot(e,r){let t=this.auth.getToken();if(!t)return n(()=>new Error("Patient session expired."));let i=new s({Authorization:`Bearer ${t}`});return this.http.post(`${this.baseUrl}/patient/reserveSlot`,{slotId:e,serviceType:r},{headers:i})}sendMessageToServer(e,r){let t=this.auth.getToken();if(!t)return n(()=>new Error("Patient session expired."));let i=new s({Authorization:`Bearer ${t}`});return this.http.post(`${this.baseUrl}/chat/send`,{receiverId:r,content:e,type:"TEXT"},{headers:i})}getChatHistory(e){let r=this.auth.getToken();if(!r)return n(()=>new Error("Patient session expired."));let t=new s({Authorization:`Bearer ${r}`});return this.http.get(`${this.baseUrl}/chat/history/${e}`,{headers:t})}getTransactions(){let e=this.auth.getToken();if(!e)return n(()=>new Error("Patient session expired."));let r=new s({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/transactions`,{headers:r}).pipe(o(t=>t||[]),a(t=>n(()=>t)))}rescheduleAppointment(e){let r=this.auth.getToken(),t=new s({Authorization:`Bearer ${r}`});return this.http.post(`${this.baseUrl}/patient/reschedule`,e,{headers:t})}cancelSlot(e){let r=this.auth.getToken();if(!r)return n(()=>new Error("Patient session expired."));let t=new s({Authorization:`Bearer ${r}`}),i={appointmentId:e};return this.http.post(`${this.baseUrl}/patient/cancelSlot`,i,{headers:t})}static \u0275fac=function(r){return new(r||c)};static \u0275prov=m({token:c,factory:c.\u0275fac,providedIn:"root"})};export{A as a};
