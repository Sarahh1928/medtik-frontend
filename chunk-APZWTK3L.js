import{a as p,b as m}from"./chunk-P6PSD35X.js";import{$ as d,E as i,Xc as g,Y as c,Yc as b,ea as u,l as s,p as h,q as n,t as o}from"./chunk-WZIMFKHB.js";var v=class a{http=u(b);auth=u(m);baseUrl=p.apiBaseUrl;profileSubject=new s(null);lockedSubject=new s(!0);loadingSubject=new s(!1);profile$=this.profileSubject.asObservable();locked$=this.lockedSubject.asObservable();loading$=this.loadingSubject.asObservable();unreadCountSubject=new s(0);unreadCount$=this.unreadCountSubject.asObservable();requestOptions(){if(p.production)return{withCredentials:!0};{let t=this.auth.getToken();if(!t)throw new Error("Doctor session expired.");return{headers:new g({Authorization:`Bearer ${t}`})}}}loadProfile(t=!1){let e=this.profileSubject.value;return e&&!t?h(e):(this.loadingSubject.next(!0),this.http.get(`${this.baseUrl}/doctor/profile`,this.requestOptions()).pipe(o(r=>r.doctor),c(r=>{this.profileSubject.next(r),this.lockedSubject.next(this.computeLocked(r)),this.loadingSubject.next(!1)}),i(r=>this.handleError(r))))}refreshProfile(){return this.profileSubject.next(null),this.lockedSubject.next(!0),this.loadProfile(!0)}updateProfile(t){return this.http.put(`${this.baseUrl}/doctor/update`,t,this.requestOptions()).pipe(o(e=>e.doctor),c(e=>{this.profileSubject.next(e),this.lockedSubject.next(this.computeLocked(e))}),i(e=>this.handleError(e)))}markAsUnlocked(){this.lockedSubject.next(!1)}computeLocked(t){if(!t)return!0;if(t.status==="ACCEPTED")return!1;let e=!!(t.title?.trim()&&t.bio?.trim()&&t.phone?.trim()&&t.department&&t.yearsOfExperience!=null&&Number(t.yearsOfExperience)>0&&t.licenseNumber?.trim()&&t.avatarUrl?.trim()),r=(t.languages?.length??0)>0,O=Array.isArray(t.pricing)&&t.pricing.length>0?["CHAT","VOICE","VIDEO"].every(y=>t.pricing.some(l=>l.service===y&&!!l.currency?.trim()&&Number(l.price)>0)):!1,D=!!t.availability&&(t.availability.chat||t.availability.voice||t.availability.video);return!0}handleError(t){this.loadingSubject.next(!1);let e="Unable to load doctor profile. Please try again.",r=t.error;return r?typeof r=="string"?e=r:typeof r=="object"&&(e=r.error??r.message??e):t.message&&(e=t.message),n(()=>e)}getAppointments(){return this.http.get(`${this.baseUrl}/appointments`,this.requestOptions()).pipe(i(t=>n(()=>t)))}cancelAppointment(t){return this.http.put(`${this.baseUrl}/doctor/appointments/${t}/cancel`,{},this.requestOptions())}noshowAppointment(t){return this.http.put(`${this.baseUrl}/doctor/appointments/${t}/no-show`,{},this.requestOptions())}postConsultationDetails(t,e){return this.http.post(`${this.baseUrl}/doctor/consultation/${t}`,e,this.requestOptions())}getConsultationDetails(t){return this.http.get(`${this.baseUrl}/doctor/consultation/${t}`,this.requestOptions())}updateConsultationDetails(t,e){return this.http.put(`${this.baseUrl}/doctor/consultation/${t}`,e,this.requestOptions()).pipe(i(r=>n(()=>r)))}deleteConsultationDetails(t){return this.http.delete(`${this.baseUrl}/doctor/consultation/${t}`,this.requestOptions())}addSlot(t){return this.http.post(`${this.baseUrl}/doctor/addSlot`,t,this.requestOptions())}deleteSlot(t){return this.http.delete(`${this.baseUrl}/doctor/slots/${t}`,this.requestOptions())}getPatients(){return this.http.get(`${this.baseUrl}/doctor/getMyPatients`,this.requestOptions())}getMyPatients(){return this.http.get(`${this.baseUrl}/doctor/getMyPatients`,this.requestOptions()).pipe(o(t=>t.patients))}getNotifications(){return this.http.get(`${this.baseUrl}/notifications`,this.requestOptions()).pipe(o(t=>t.notifications||[]),i(t=>n(()=>new Error(t?.error?.message||"Failed to load notifications"))))}clearAllNotifications(){return this.http.delete(`${this.baseUrl}/notifications/deleteAll`,this.requestOptions()).pipe(i(t=>n(()=>t)))}markNotificationRead(t){return this.http.patch(`${this.baseUrl}/notifications/${t}/read`,{},this.requestOptions())}deleteNotification(t){return this.http.delete(`${this.baseUrl}/notifications/${t}`,this.requestOptions())}markallNotificationRead(){return this.http.patch(`${this.baseUrl}/notifications/readAll`,{},this.requestOptions())}updateUnreadCount(t){this.unreadCountSubject.next(t)}decrementUnreadCount(){this.unreadCountSubject.next(Math.max(0,this.unreadCountSubject.value-1))}incrementUnreadCount(){this.unreadCountSubject.next(this.unreadCountSubject.value+1)}sendMessageToServer(t,e){return this.http.post(`${this.baseUrl}/chat/send`,{receiverId:e,content:t,type:"TEXT"},this.requestOptions())}getChatHistory(t){return this.http.get(`${this.baseUrl}/chat/history/${t}`,this.requestOptions())}getProfile(){return this.http.get(`${this.baseUrl}/doctor/profile`,this.requestOptions())}get lockedValue(){return this.lockedSubject.value}getDepartments(){let t=this.requestOptions().headers;return this.http.get(`${this.baseUrl}/departments`,this.requestOptions()).pipe(i(e=>this.handleError(e)))}sendFileToServer(t){return this.http.post(`${this.baseUrl}/chat/send-file`,t,this.requestOptions())}static \u0275fac=function(e){return new(e||a)};static \u0275prov=d({token:a,factory:a.\u0275fac,providedIn:"root"})};export{v as a};
