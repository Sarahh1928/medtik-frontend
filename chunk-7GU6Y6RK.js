import{a as l,b as m}from"./chunk-P6PSD35X.js";import{$ as d,E as r,Xc as g,Y as a,Yc as b,a as s,ea as h,l as u,q as i,t as p}from"./chunk-WZIMFKHB.js";var c=class o{http=h(b);auth=h(m);baseUrl=l.apiBaseUrl;unreadCountSubject=new u(0);unreadCount$=this.unreadCountSubject.asObservable();getOptions(t={}){if(l.production)return console.log(s({withCredentials:!0},t)),s({withCredentials:!0},t);{let e=this.auth.getToken();if(!e)throw new Error("Admin session expired.");let n=new g({Authorization:`Bearer ${e}`});return s({headers:n},t)}}getToken(){return this.auth.getToken()}registerDoctor(t){return this.http.post(`${this.baseUrl}/auth/register-doctor`,t,this.getOptions()).pipe(r(e=>this.handleError(e)))}getAllUsers(){return this.http.get(`${this.baseUrl}/admin/users`,this.getOptions()).pipe(a(t=>{}),r(t=>this.handleError(t)))}toggleBan(t){return this.http.post(`${this.baseUrl}/admin/toggle-ban`,{email:t},this.getOptions()).pipe(r(e=>this.handleError(e)))}getDepartments(){return this.http.get(`${this.baseUrl}/departments`,this.getOptions()).pipe(r(t=>this.handleError(t)))}addDepartment(t){return this.http.post(`${this.baseUrl}/admin/departments`,t,this.getOptions()).pipe(r(e=>this.handleError(e)))}updateDepartment(t,e){return this.http.put(`${this.baseUrl}/admin/departments/${t}`,e,this.getOptions()).pipe(r(n=>this.handleError(n)))}deleteDepartment(t){return this.http.delete(`${this.baseUrl}/admin/departments/${t}`,this.getOptions()).pipe(r(e=>this.handleError(e)))}getDoctorUpdateRequests(){return this.http.get(`${this.baseUrl}/admin/doctor-update-requests`,this.getOptions()).pipe(a(t=>{}),r(t=>this.handleError(t)))}acceptRequest(t){return this.http.post(`${this.baseUrl}/admin/doctor-requests/${t}/accept`,{},this.getOptions()).pipe(r(e=>this.handleError(e)))}rejectRequest(t,e){return this.http.post(`${this.baseUrl}/admin/doctor-requests/${t}/reject`,{note:e},this.getOptions()).pipe(r(n=>this.handleError(n)))}deleteRequest(t){return this.http.delete(`${this.baseUrl}/admin/doctor-requests/${t}`,this.getOptions()).pipe(r(e=>this.handleError(e)))}getNotifications(){return this.http.get(`${this.baseUrl}/notifications`,this.getOptions()).pipe(a(t=>{}),p(t=>t.notifications||[]),r(t=>{let e="Failed to load notifications";return t?.error?.message&&(e=t.error.message),i(()=>new Error(e))}))}markNotificationRead(t){return this.http.patch(`${this.baseUrl}/notifications/${t}/read`,{},this.getOptions())}markallNotificationRead(){return this.http.patch(`${this.baseUrl}/notifications/readAll`,{},this.getOptions())}markNotificationUnRead(t){return this.http.patch(`${this.baseUrl}/notifications/${t}/unread`,{},this.getOptions())}deleteNotification(t){return this.http.delete(`${this.baseUrl}/notifications/${t}`,this.getOptions())}updateUnreadCount(t){this.unreadCountSubject.next(t)}decrementUnreadCount(){this.unreadCountSubject.next(Math.max(0,this.unreadCountSubject.value-1))}incrementUnreadCount(){this.unreadCountSubject.next(this.unreadCountSubject.value+1)}getDoctorById(t){return this.http.get(`${this.baseUrl}/admin/doctor/${t}`,this.getOptions())}getTransactions(){return this.http.get(`${this.baseUrl}/transactions`,this.getOptions()).pipe(p(t=>t),r(t=>i(()=>t)))}handleError(t){let e="Something went wrong. Please try again later.",n=t.error;return n?typeof n=="string"?e=n:typeof n=="object"&&(e=n.message??n.error??e):t.message&&(e=t.message),i(()=>new Error(e))}static \u0275fac=function(e){return new(e||o)};static \u0275prov=d({token:o,factory:o.\u0275fac,providedIn:"root"})};export{c as a};
