import{a}from"./chunk-GFO3VGSQ.js";import{a as e,b as r}from"./chunk-F426BNRH.js";import{$ as c,ea as s,l as i}from"./chunk-BE7DJT6W.js";var u=class n{socket=null;authService=s(r);notifSub;notificationsSubject=new i([]);notifications$=this.notificationsSubject.asObservable();constructor(){let o=localStorage.getItem("admin_notifications");if(o)try{this.notificationsSubject.next(JSON.parse(o))}catch{localStorage.removeItem("admin_notifications")}this.notifSub=this.notifications$.subscribe(t=>localStorage.setItem("admin_notifications",JSON.stringify(t)))}connect(){if(this.socket?.connected)return this.socket;let o={transports:["websocket"],reconnection:!0,secure:e.production,withCredentials:e.production,auth:{}};if(e.production)o.auth={role:"ADMIN"};else{let t=this.authService.getToken();if(!t)return console.warn("\u26A0\uFE0F No admin token found. Socket not connected."),null;o.auth={token:t,role:"ADMIN"}}return this.socket=a(e.socketUrl,o),this.socket.on("connect",()=>{console.log(`\u2705 Admin socket connected: ${this.socket?.id}`)}),this.socket.on("disconnect",t=>{console.warn(`\u26A1 Admin socket disconnected: ${t}`)}),this.socket.on("connect_error",t=>{console.error("\u274C Socket connection error:",t.message)}),this.socket}getSocket(){return this.socket}disconnect(){this.socket&&(this.socket.disconnect(),this.socket=null)}ngOnDestroy(){this.disconnect(),this.notifSub.unsubscribe()}static \u0275fac=function(t){return new(t||n)};static \u0275prov=c({token:n,factory:n.\u0275fac,providedIn:"root"})};export{u as a};
