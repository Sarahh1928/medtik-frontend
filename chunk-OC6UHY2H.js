import{a as o,b as m}from"./chunk-P6PSD35X.js";import{$ as c,E as s,Xc as d,Yc as g,a as l,b,ea as h,l as u,q as n,t as r}from"./chunk-WZIMFKHB.js";var O=class p{http=h(g);auth=h(m);baseUrl=o.apiBaseUrl;baseSocketUrl=o.socketUrl;unreadCountSubject=new u(0);unreadCount$=this.unreadCountSubject.asObservable();getOptions(){if(o.production)return{withCredentials:!0};{let t=this.auth.getToken();if(!t)throw new Error("Session expired.");return{headers:new d({Authorization:`Bearer ${t}`})}}}getNotifications(){return this.http.get(`${this.baseUrl}/notifications`,this.getOptions()).pipe(r(t=>t.notifications))}clearAllNotifications(){return this.http.delete(`${this.baseUrl}/notifications/deleteAll`,this.getOptions()).pipe(s(t=>n(()=>t)))}markNotificationRead(t){return this.http.patch(`${this.baseUrl}/notifications/${t}/read`,{},this.getOptions())}markNotificationUnRead(t){return this.http.patch(`${this.baseUrl}/notifications/${t}/unread`,{},this.getOptions())}deleteNotification(t){return this.http.delete(`${this.baseUrl}/notifications/${t}`,this.getOptions())}markallNotificationRead(){return this.http.patch(`${this.baseUrl}/notifications/readAll`,{},this.getOptions())}updateUnreadCount(t){this.unreadCountSubject.next(t)}decrementUnreadCount(){this.unreadCountSubject.next(Math.max(0,this.unreadCountSubject.value-1))}incrementUnreadCount(){this.unreadCountSubject.next(this.unreadCountSubject.value+1)}getAppointments(t){return this.http.get(`${this.baseUrl}/appointments`,this.getOptions()).pipe(s(e=>n(()=>e)))}rescheduleAppointment(t){return this.http.post(`${this.baseUrl}/patient/reschedule`,t,this.getOptions()).pipe(s(e=>n(()=>e)))}cancelSlot(t){return this.http.post(`${this.baseUrl}/patient/cancelSlot`,{appointmentId:t},this.getOptions()).pipe(s(e=>n(()=>e)))}getMyReviews(){return this.http.get(`${this.baseUrl}/myReviews`,this.getOptions()).pipe(r(t=>t.reviews))}submitReview(t,e,a){return this.http.post(`${this.baseUrl}/patient/review`,{doctorId:t,rating:e,comment:a},this.getOptions()).pipe(s(i=>n(()=>i)))}submitUpdatedReview(t,e,a){return console.log("Submitting updated review:",{reviewId:t,rating:e,comment:a}),this.http.put(`${this.baseUrl}/patient/review`,{reviewId:t,rating:e,comment:a},this.getOptions()).pipe(s(i=>n(()=>i)))}getRecords(){return this.http.get(`${this.baseUrl}/patient/records`,this.getOptions()).pipe(r(t=>t.records.map(e=>b(l({},e),{fileUrl:`${this.baseSocketUrl}${e.fileUrl}`}))))}uploadMedicalRecord(t,e,a){let i=new FormData;return i.append("file",t),i.append("type",e.toUpperCase()),a&&i.append("notes",a),this.http.post(`${this.baseUrl}/patient/records`,i,this.getOptions()).pipe(r(v=>v.record))}deleteRecord(t){return this.http.delete(`${this.baseUrl}/patient/records/${t}`,this.getOptions()).pipe(s(e=>n(()=>e)))}getDoctors(){return this.http.get(`${this.baseUrl}/patient/getDoctors`,this.getOptions()).pipe(r(t=>t.doctors))}getDoctorById(t){return this.http.get(`${this.baseUrl}/patient/doctor/${t}`,this.getOptions())}getMyDoctors(){return this.http.get(`${this.baseUrl}/patient/getMyDoctors`,this.getOptions()).pipe(r(t=>t.doctors))}sendMessageToServer(t,e){return this.http.post(`${this.baseUrl}/chat/send`,{receiverId:e,content:t,type:"TEXT"},this.getOptions())}getChatHistory(t){return this.http.get(`${this.baseUrl}/chat/history/${t}`,this.getOptions())}getTransactions(){return this.http.get(`${this.baseUrl}/transactions`,this.getOptions()).pipe(r(t=>t||[]))}reserveSlot(t,e){return this.http.post(`${this.baseUrl}/patient/reserveSlot`,{slotId:t,serviceType:e},this.getOptions())}getProfile(){return this.http.get(`${this.baseUrl}/patient/profile`,this.getOptions()).pipe(r(t=>t))}updateProfile(t){return this.http.put(`${this.baseUrl}/patient/update`,t,this.getOptions())}sendOtp(t){return this.http.post(`${this.baseUrl}/patient/phone/send-otp`,{newPhone:t},this.getOptions())}verifyOtp(t){return this.http.post(`${this.baseUrl}/patient/phone/verify-otp`,{otp:t},this.getOptions())}sendFileToServer(t){return this.http.post(`${this.baseUrl}/chat/send-file`,t,this.getOptions())}static \u0275fac=function(e){return new(e||p)};static \u0275prov=c({token:p,factory:p.\u0275fac,providedIn:"root"})};export{O as a};
