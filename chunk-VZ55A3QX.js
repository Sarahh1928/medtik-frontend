import{a as l,b as c}from"./chunk-CUGN3AIA.js";import{$ as p,Sc as n,T as o,Tc as g,W as u,l as i,o as d,z as a}from"./chunk-HKUWCROW.js";var m=class h{http=p(g);auth=p(c);baseUrl=l.apiBaseUrl;registerDoctor(e){let r=this.auth.getToken();if(!r)return i(()=>new Error("Your admin session has expired. Please log in again."));console.log("Registering doctor with payload:",e);let t=new n({Authorization:`Bearer ${r}`});return this.http.post(`${this.baseUrl}/auth/register-doctor`,e,{headers:t}).pipe(a(s=>this.handleError(s)))}getDepartments(){let e=this.auth.getToken(),r=e?new n({Authorization:`Bearer ${e}`}):void 0;return this.http.get(`${this.baseUrl}/departments`,{headers:r}).pipe(a(t=>this.handleError(t)))}addDepartment(e){let r=this.auth.getToken();if(!r)return i(()=>new Error("Your admin session has expired. Please log in again."));let t=new n({Authorization:`Bearer ${r}`});return this.http.post(`${this.baseUrl}/admin/departments`,e,{headers:t}).pipe(a(s=>this.handleError(s)))}toggleBan(e){let r=this.auth.getToken();if(!r)return i(()=>new Error("Your admin session has expired. Please log in again."));let t=new n({Authorization:`Bearer ${r}`});return this.http.post(`${this.baseUrl}/admin/toggle-ban`,{email:e},{headers:t}).pipe(a(s=>this.handleError(s)))}getDoctorUpdateRequests(){let e=this.auth.getToken();if(!e)return i(()=>new Error("Your admin session has expired. Please log in again."));let r=new n({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/admin/doctor-update-requests`,{headers:r}).pipe(o(t=>console.log("API Response inside service:",t)),a(t=>this.handleError(t)))}acceptRequest(e){let r=this.auth.getToken(),t=new n({Authorization:`Bearer ${r}`});return this.http.post(`${this.baseUrl}/admin/doctor-requests/${e}/accept`,{},{headers:t})}rejectRequest(e,r){let t=this.auth.getToken(),s=new n({Authorization:`Bearer ${t}`});return this.http.post(`${this.baseUrl}/admin/doctor-requests/${e}/reject`,{note:r},{headers:s})}deleteRequest(e){let r=this.auth.getToken(),t=new n({Authorization:`Bearer ${r}`});return this.http.delete(`${this.baseUrl}/admin/doctor-requests/${e}`,{headers:t})}handleError(e){let r="Something went wrong. Please try again later.",t=e.error;return t?typeof t=="string"?r=t:typeof t=="object"&&(r=t.message??t.error??r):e.message&&(r=e.message),i(()=>new Error(r))}getAllUsers(){let e=this.auth.getToken();if(!e)return i(()=>new Error("Your admin session has expired. Please log in again."));let r=new n({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/admin/users`,{headers:r}).pipe(o(t=>console.log("Fetched users:",t)),a(t=>this.handleError(t)))}deleteDepartment(e){let r=this.auth.getToken();if(!r)return i(()=>new Error("Your admin session has expired. Please log in again."));let t=new n({Authorization:`Bearer ${r}`});return this.http.delete(`${this.baseUrl}/admin/departments/${e}`,{headers:t}).pipe(a(s=>this.handleError(s)))}updateDepartment(e,r){let t=this.auth.getToken();if(!t)return i(()=>new Error("Your admin session has expired. Please log in again."));let s=new n({Authorization:`Bearer ${t}`});return this.http.put(`${this.baseUrl}/admin/departments/${e}`,r,{headers:s}).pipe(a(b=>this.handleError(b)))}getNotifications(){let e=this.auth.getToken();if(!e)return i(()=>new Error("Doctor session expired."));let r=new n({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/notifications`,{headers:r}).pipe(o(t=>console.log("API Response inside service:",t)),d(t=>t.notifications||[]),a(t=>{let s="Failed to load notifications";return t?.error?.message&&(s=t.error.message),i(()=>new Error(s))}))}getAuthHeaders(){let e=this.auth.getToken();return new n({Authorization:`Bearer ${e}`})}markNotificationRead(e){return this.http.patch(`${this.baseUrl}/notifications/${e}/read`,{},{headers:this.getAuthHeaders()})}markNotificationUnRead(e){return this.http.patch(`${this.baseUrl}/notifications/${e}/unread`,{},{headers:this.getAuthHeaders()})}deleteNotification(e){return this.http.delete(`${this.baseUrl}/notifications/${e}`,{headers:this.getAuthHeaders()})}getDoctorById(e){return this.http.get(`http://localhost:4000/api/admin/doctor/${e}`,{headers:this.getAuthHeaders()})}getTransactions(){let e=this.auth.getToken();if(!e)return i(()=>new Error("Patient session expired."));let r=new n({Authorization:`Bearer ${e}`});return this.http.get(`${this.baseUrl}/transactions`,{headers:r}).pipe(d(t=>(console.log("Fetched transactions:",t),t)),a(t=>i(()=>t)))}static \u0275fac=function(r){return new(r||h)};static \u0275prov=u({token:h,factory:h.\u0275fac,providedIn:"root"})};export{m as a};
