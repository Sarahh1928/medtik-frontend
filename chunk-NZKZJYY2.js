import{a as h,b as m}from"./chunk-X74WTQLY.js";import{E as r,Y as n,a,aa as d,fa as l,q as i,t as p,xd as g,yd as c}from"./chunk-PCHMKQLW.js";var b=class o{http=l(c);auth=l(m);baseUrl=h.apiBaseUrl;getOptions(e={}){if(console.log("AdminService: getOptions called"),h.production)return console.log("AdminService: production mode"),a({withCredentials:!0},e);{console.log("AdminService: development mode");let t=this.auth.getToken();if(!t)throw new Error("Admin session expired.");let s=new g({Authorization:`Bearer ${t}`});return a({headers:s},e)}}registerDoctor(e){return console.log("Registering doctor with payload:",e),this.http.post(`${this.baseUrl}/auth/register-doctor`,e,this.getOptions()).pipe(r(t=>this.handleError(t)))}getAllUsers(){return this.http.get(`${this.baseUrl}/admin/users`,this.getOptions()).pipe(n(e=>console.log("Fetched users:",e)),r(e=>this.handleError(e)))}toggleBan(e){return this.http.post(`${this.baseUrl}/admin/toggle-ban`,{email:e},this.getOptions()).pipe(r(t=>this.handleError(t)))}getDepartments(){return this.http.get(`${this.baseUrl}/departments`,this.getOptions()).pipe(r(e=>this.handleError(e)))}addDepartment(e){return this.http.post(`${this.baseUrl}/admin/departments`,e,this.getOptions()).pipe(r(t=>this.handleError(t)))}updateDepartment(e,t){return this.http.put(`${this.baseUrl}/admin/departments/${e}`,t,this.getOptions()).pipe(r(s=>this.handleError(s)))}deleteDepartment(e){return this.http.delete(`${this.baseUrl}/admin/departments/${e}`,this.getOptions()).pipe(r(t=>this.handleError(t)))}getDoctorUpdateRequests(){return this.http.get(`${this.baseUrl}/admin/doctor-update-requests`,this.getOptions()).pipe(n(e=>console.log("API Response inside service:",e)),r(e=>this.handleError(e)))}acceptRequest(e){return this.http.post(`${this.baseUrl}/admin/doctor-requests/${e}/accept`,{},this.getOptions()).pipe(r(t=>this.handleError(t)))}rejectRequest(e,t){return this.http.post(`${this.baseUrl}/admin/doctor-requests/${e}/reject`,{note:t},this.getOptions()).pipe(r(s=>this.handleError(s)))}deleteRequest(e){return this.http.delete(`${this.baseUrl}/admin/doctor-requests/${e}`,this.getOptions()).pipe(r(t=>this.handleError(t)))}getNotifications(){return this.http.get(`${this.baseUrl}/notifications`,this.getOptions()).pipe(n(e=>console.log("API Response inside service:",e)),p(e=>e.notifications||[]),r(e=>{let t="Failed to load notifications";return e?.error?.message&&(t=e.error.message),i(()=>new Error(t))}))}markNotificationRead(e){return this.http.patch(`${this.baseUrl}/notifications/${e}/read`,{},this.getOptions())}markNotificationUnRead(e){return this.http.patch(`${this.baseUrl}/notifications/${e}/unread`,{},this.getOptions())}deleteNotification(e){return this.http.delete(`${this.baseUrl}/notifications/${e}`,this.getOptions())}getDoctorById(e){return this.http.get(`${this.baseUrl}/admin/doctor/${e}`,this.getOptions())}getTransactions(){return this.http.get(`${this.baseUrl}/transactions`,this.getOptions()).pipe(p(e=>(console.log("Fetched transactions:",e),e)),r(e=>i(()=>e)))}handleError(e){let t="Something went wrong. Please try again later.",s=e.error;return s?typeof s=="string"?t=s:typeof s=="object"&&(t=s.message??s.error??t):e.message&&(t=e.message),i(()=>new Error(t))}static \u0275fac=function(t){return new(t||o)};static \u0275prov=d({token:o,factory:o.\u0275fac,providedIn:"root"})};export{b as a};
