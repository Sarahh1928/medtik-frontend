import{a as o,b as u}from"./chunk-JQ5JD7Q3.js";import{$ as p,Sc as d,Tc as b,W as g,l as i,o as r,z as s}from"./chunk-HKUWCROW.js";import{a as h,b as c}from"./chunk-JKOY2XUY.js";var m=class a{http=p(b);auth=p(u);baseUrl=o.apiBaseUrl;baseSocketUrl=o.socketUrl;getOptions(){if(o.production)return{withCredentials:!0};{let t=this.auth.getToken();if(!t)throw new Error("Session expired.");return{headers:new d({Authorization:`Bearer ${t}`})}}}getNotifications(){return this.http.get(`${this.baseUrl}/notifications`,this.getOptions()).pipe(r(t=>t.notifications))}getAppointments(t){return this.http.get(`${this.baseUrl}/appointments`,this.getOptions()).pipe(s(e=>i(()=>e)))}rescheduleAppointment(t){return this.http.post(`${this.baseUrl}/patient/reschedule`,t,this.getOptions()).pipe(s(e=>i(()=>e)))}cancelSlot(t){return this.http.post(`${this.baseUrl}/patient/cancelSlot`,{appointmentId:t},this.getOptions()).pipe(s(e=>i(()=>e)))}getMyReviews(){return this.http.get(`${this.baseUrl}/myReviews`,this.getOptions()).pipe(r(t=>t.reviews))}getRecords(){return this.http.get(`${this.baseUrl}/patient/records`,this.getOptions()).pipe(r(t=>t.records.map(e=>c(h({},e),{fileUrl:`${this.baseSocketUrl}${e.fileUrl}`}))))}uploadMedicalRecord(t,e,l){let n=new FormData;return n.append("file",t),n.append("type",e.toUpperCase()),l&&n.append("notes",l),this.http.post(`${this.baseUrl}/patient/records`,n,this.getOptions()).pipe(r(f=>f.record))}deleteRecord(t){return this.http.delete(`${this.baseUrl}/patient/records/${t}`,this.getOptions()).pipe(s(e=>i(()=>e)))}getDoctors(){return this.http.get(`${this.baseUrl}/patient/getDoctors`,this.getOptions()).pipe(r(t=>t.doctors))}getDoctorById(t){return this.http.get(`${this.baseUrl}/patient/doctor/${t}`,this.getOptions())}getMyDoctors(){return this.http.get(`${this.baseUrl}/patient/getMyDoctors`,this.getOptions()).pipe(r(t=>t.doctors))}sendMessageToServer(t,e){return this.http.post(`${this.baseUrl}/chat/send`,{receiverId:e,content:t,type:"TEXT"},this.getOptions())}getChatHistory(t){return this.http.get(`${this.baseUrl}/chat/history/${t}`,this.getOptions())}getTransactions(){return this.http.get(`${this.baseUrl}/transactions`,this.getOptions()).pipe(r(t=>t||[]))}reserveSlot(t,e){return this.http.post(`${this.baseUrl}/patient/reserveSlot`,{slotId:t,serviceType:e},this.getOptions())}getProfile(){return this.http.get(`${this.baseUrl}/patient/profile`,this.getOptions()).pipe(r(t=>(console.log("Patient Profile:",t),t)))}static \u0275fac=function(e){return new(e||a)};static \u0275prov=g({token:a,factory:a.\u0275fac,providedIn:"root"})};export{m as a};
