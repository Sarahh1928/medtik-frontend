import{$ as n,Nc as u,Sc as i,T as g,Tc as c,W as h,l as p,o as l,ya as d,z as r}from"./chunk-HKUWCROW.js";var a={production:!0,apiBaseUrl:"https://medtik-backend.onrender.com/api",socketUrl:"https://medtik-backend.onrender.com"};var m=class s{http=n(c);platformId=n(d);isBrowser=u(this.platformId);baseUrl=a.apiBaseUrl;tokenKey="medtik_token";isProd=a.production;registerPatient(e){return this.http.post(`${this.baseUrl}/auth/register-patient`,e,this.getHttpOptions()).pipe(r(t=>this.handleError(t)))}verifyOtp(e){return this.http.post(`${this.baseUrl}/auth/verify-otp`,e,this.getHttpOptions()).pipe(r(t=>this.handleError(t)))}login(e){return this.http.post(`${this.baseUrl}/auth/login`,e,this.getHttpOptions()).pipe(g(t=>{console.log("\u{1F7E9} Raw response from backend:",t),!this.isProd&&t?.token&&this.setToken(t.token)}),l(t=>({message:t.message,role:t.role??null,doctorStatus:t.doctorStatus??null})))}resendOtp(e){return this.http.post(`${this.baseUrl}/auth/resend-otp`,{email:e},this.getHttpOptions()).pipe(r(t=>this.handleError(t)))}changePassword(e){let t=this.isProd?void 0:new i({"Content-Type":"application/json",Authorization:`Bearer ${this.getToken()??""}`});return this.http.post(`${this.baseUrl}/auth/change-password`,e,this.isProd?{withCredentials:!0}:{headers:t}).pipe(r(o=>this.handleError(o)))}logout(){return this.http.post(`${this.baseUrl}/auth/logout`,{},this.getHttpOptions()).pipe(r(e=>this.handleError(e)))}getToken(){return this.isBrowser?localStorage.getItem(this.tokenKey):null}clearToken(){this.isBrowser&&localStorage.removeItem(this.tokenKey)}setToken(e){this.isBrowser&&localStorage.setItem(this.tokenKey,e)}getCurrentRole(){if(!this.isBrowser)return null;let e=this.getToken();return e?this.extractRoleFromToken(e):null}extractRoleFromToken(e){try{let t=e.split(".")[1];if(!t)return null;let o=t.replace(/-/g,"+").replace(/_/g,"/"),f=atob(o);return JSON.parse(f)?.role??null}catch(t){return console.warn("Failed to decode JWT role",t),null}}getHttpOptions(){return this.isProd?{withCredentials:!0}:{headers:new i({"Content-Type":"application/json",Authorization:`Bearer ${this.getToken()??""}`})}}handleError(e){let t="Something went wrong. Please try again.";return e.error?typeof e.error=="string"?t=e.error:typeof e.error=="object"&&(t=e.error.error??e.error.message??t):e.message&&(t=e.message),p(()=>t)}static \u0275fac=function(t){return new(t||s)};static \u0275prov=h({token:s,factory:s.\u0275fac,providedIn:"root"})};export{a,m as b};
